name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Release-Tool CI
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Setup Go binary path
      shell: bash
      run: |
        echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

    - name: Check out code
      uses: actions/checkout@v2
      with:
        path: src/github.com/containerd/release-tool
        fetch-depth: 25

    - name: Checkout project
      uses: actions/checkout@v2
      with:
        repository: containerd/project
        path: src/github.com/containerd/project

    - name: Install dependencies
      env:
        GO111MODULE: off
        GOLANGCI_LINT_VERSION: "v1.22.2"
      run: |
        go get -u github.com/vbatts/git-validation
        go get -u github.com/kunalkushwaha/ltag
        curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin ${GOLANGCI_LINT_VERSION}

    - name: Check DCO/whitespace/commit message
      env:
        GITHUB_COMMIT_URL: ${{ github.event.pull_request.commits_url }}
        DCO_VERBOSITY: "-q"
        DCO_RANGE: ""
      working-directory: src/github.com/containerd/release-tool
      run: |
        if [ -z "${GITHUB_COMMIT_URL}" ]; then
          DCO_RANGE=$(jq -r '.before +".."+ .after' ${GITHUB_EVENT_PATH})
        else
          DCO_RANGE=$(curl ${GITHUB_COMMIT_URL} | jq -r '.[0].parents[0].sha +".."+ .[-1].sha')
        fi
        ../project/script/validate/dco

    - name: Check file headers
      run: ../project/script/validate/fileheader ../project/
      working-directory: src/github.com/containerd/release-tool

    - name: Vendor
      run: ../project/script/validate/vendor
      working-directory: src/github.com/containerd/release-tool

    - name: Lint
      run: GOGC=75 golangci-lint run
      working-directory: src/github.com/containerd/release-tool

    - name: Unit Test
      working-directory: src/github.com/containerd/release-tool
      run: |
        go test -v .

    - name: Build
      working-directory: src/github.com/containerd/release-tool
      run: |
        go build -o release-tool github.com/containerd/release-tool
